// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPatientSelectableBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dietText;

  @NonNull
  public final TextView locationText;

  @NonNull
  public final TextView patientNameText;

  @NonNull
  public final CheckBox selectionCheckBox;

  @NonNull
  public final TextView statusText;

  private ItemPatientSelectableBinding(@NonNull LinearLayout rootView, @NonNull TextView dietText,
      @NonNull TextView locationText, @NonNull TextView patientNameText,
      @NonNull CheckBox selectionCheckBox, @NonNull TextView statusText) {
    this.rootView = rootView;
    this.dietText = dietText;
    this.locationText = locationText;
    this.patientNameText = patientNameText;
    this.selectionCheckBox = selectionCheckBox;
    this.statusText = statusText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPatientSelectableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPatientSelectableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_patient_selectable, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPatientSelectableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dietText;
      TextView dietText = ViewBindings.findChildViewById(rootView, id);
      if (dietText == null) {
        break missingId;
      }

      id = R.id.locationText;
      TextView locationText = ViewBindings.findChildViewById(rootView, id);
      if (locationText == null) {
        break missingId;
      }

      id = R.id.patientNameText;
      TextView patientNameText = ViewBindings.findChildViewById(rootView, id);
      if (patientNameText == null) {
        break missingId;
      }

      id = R.id.selectionCheckBox;
      CheckBox selectionCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (selectionCheckBox == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      return new ItemPatientSelectableBinding((LinearLayout) rootView, dietText, locationText,
          patientNameText, selectionCheckBox, statusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
