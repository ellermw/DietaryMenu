// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminMenuBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addItemButton;

  @NonNull
  public final Button addUserButton;

  @NonNull
  public final Button backToMenuButton;

  @NonNull
  public final Spinner categoryFilterSpinner;

  @NonNull
  public final Button defaultMenuButton;

  @NonNull
  public final EditText itemSearchEditText;

  @NonNull
  public final LinearLayout itemsContainer;

  @NonNull
  public final TextView itemsCountText;

  @NonNull
  public final ListView itemsListView;

  @NonNull
  public final Button itemsMenuButton;

  @NonNull
  public final LinearLayout mainMenuContainer;

  @NonNull
  public final EditText userSearchEditText;

  @NonNull
  public final LinearLayout usersContainer;

  @NonNull
  public final TextView usersCountText;

  @NonNull
  public final ListView usersListView;

  @NonNull
  public final Button usersMenuButton;

  private ActivityAdminMenuBinding(@NonNull LinearLayout rootView, @NonNull Button addItemButton,
      @NonNull Button addUserButton, @NonNull Button backToMenuButton,
      @NonNull Spinner categoryFilterSpinner, @NonNull Button defaultMenuButton,
      @NonNull EditText itemSearchEditText, @NonNull LinearLayout itemsContainer,
      @NonNull TextView itemsCountText, @NonNull ListView itemsListView,
      @NonNull Button itemsMenuButton, @NonNull LinearLayout mainMenuContainer,
      @NonNull EditText userSearchEditText, @NonNull LinearLayout usersContainer,
      @NonNull TextView usersCountText, @NonNull ListView usersListView,
      @NonNull Button usersMenuButton) {
    this.rootView = rootView;
    this.addItemButton = addItemButton;
    this.addUserButton = addUserButton;
    this.backToMenuButton = backToMenuButton;
    this.categoryFilterSpinner = categoryFilterSpinner;
    this.defaultMenuButton = defaultMenuButton;
    this.itemSearchEditText = itemSearchEditText;
    this.itemsContainer = itemsContainer;
    this.itemsCountText = itemsCountText;
    this.itemsListView = itemsListView;
    this.itemsMenuButton = itemsMenuButton;
    this.mainMenuContainer = mainMenuContainer;
    this.userSearchEditText = userSearchEditText;
    this.usersContainer = usersContainer;
    this.usersCountText = usersCountText;
    this.usersListView = usersListView;
    this.usersMenuButton = usersMenuButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addItemButton;
      Button addItemButton = ViewBindings.findChildViewById(rootView, id);
      if (addItemButton == null) {
        break missingId;
      }

      id = R.id.addUserButton;
      Button addUserButton = ViewBindings.findChildViewById(rootView, id);
      if (addUserButton == null) {
        break missingId;
      }

      id = R.id.backToMenuButton;
      Button backToMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (backToMenuButton == null) {
        break missingId;
      }

      id = R.id.categoryFilterSpinner;
      Spinner categoryFilterSpinner = ViewBindings.findChildViewById(rootView, id);
      if (categoryFilterSpinner == null) {
        break missingId;
      }

      id = R.id.defaultMenuButton;
      Button defaultMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (defaultMenuButton == null) {
        break missingId;
      }

      id = R.id.itemSearchEditText;
      EditText itemSearchEditText = ViewBindings.findChildViewById(rootView, id);
      if (itemSearchEditText == null) {
        break missingId;
      }

      id = R.id.itemsContainer;
      LinearLayout itemsContainer = ViewBindings.findChildViewById(rootView, id);
      if (itemsContainer == null) {
        break missingId;
      }

      id = R.id.itemsCountText;
      TextView itemsCountText = ViewBindings.findChildViewById(rootView, id);
      if (itemsCountText == null) {
        break missingId;
      }

      id = R.id.itemsListView;
      ListView itemsListView = ViewBindings.findChildViewById(rootView, id);
      if (itemsListView == null) {
        break missingId;
      }

      id = R.id.itemsMenuButton;
      Button itemsMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (itemsMenuButton == null) {
        break missingId;
      }

      id = R.id.mainMenuContainer;
      LinearLayout mainMenuContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainMenuContainer == null) {
        break missingId;
      }

      id = R.id.userSearchEditText;
      EditText userSearchEditText = ViewBindings.findChildViewById(rootView, id);
      if (userSearchEditText == null) {
        break missingId;
      }

      id = R.id.usersContainer;
      LinearLayout usersContainer = ViewBindings.findChildViewById(rootView, id);
      if (usersContainer == null) {
        break missingId;
      }

      id = R.id.usersCountText;
      TextView usersCountText = ViewBindings.findChildViewById(rootView, id);
      if (usersCountText == null) {
        break missingId;
      }

      id = R.id.usersListView;
      ListView usersListView = ViewBindings.findChildViewById(rootView, id);
      if (usersListView == null) {
        break missingId;
      }

      id = R.id.usersMenuButton;
      Button usersMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (usersMenuButton == null) {
        break missingId;
      }

      return new ActivityAdminMenuBinding((LinearLayout) rootView, addItemButton, addUserButton,
          backToMenuButton, categoryFilterSpinner, defaultMenuButton, itemSearchEditText,
          itemsContainer, itemsCountText, itemsListView, itemsMenuButton, mainMenuContainer,
          userSearchEditText, usersContainer, usersCountText, usersListView, usersMenuButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
