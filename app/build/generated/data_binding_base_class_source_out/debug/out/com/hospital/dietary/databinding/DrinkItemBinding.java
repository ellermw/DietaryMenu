// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DrinkItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView drinkFluidML;

  @NonNull
  public final TextView drinkItemName;

  @NonNull
  public final TextView drinkQuantity;

  @NonNull
  public final Button removeDrinkButton;

  private DrinkItemBinding(@NonNull LinearLayout rootView, @NonNull TextView drinkFluidML,
      @NonNull TextView drinkItemName, @NonNull TextView drinkQuantity,
      @NonNull Button removeDrinkButton) {
    this.rootView = rootView;
    this.drinkFluidML = drinkFluidML;
    this.drinkItemName = drinkItemName;
    this.drinkQuantity = drinkQuantity;
    this.removeDrinkButton = removeDrinkButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DrinkItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DrinkItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.drink_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DrinkItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drinkFluidML;
      TextView drinkFluidML = ViewBindings.findChildViewById(rootView, id);
      if (drinkFluidML == null) {
        break missingId;
      }

      id = R.id.drinkItemName;
      TextView drinkItemName = ViewBindings.findChildViewById(rootView, id);
      if (drinkItemName == null) {
        break missingId;
      }

      id = R.id.drinkQuantity;
      TextView drinkQuantity = ViewBindings.findChildViewById(rootView, id);
      if (drinkQuantity == null) {
        break missingId;
      }

      id = R.id.removeDrinkButton;
      Button removeDrinkButton = ViewBindings.findChildViewById(rootView, id);
      if (removeDrinkButton == null) {
        break missingId;
      }

      return new DrinkItemBinding((LinearLayout) rootView, drinkFluidML, drinkItemName,
          drinkQuantity, removeDrinkButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
