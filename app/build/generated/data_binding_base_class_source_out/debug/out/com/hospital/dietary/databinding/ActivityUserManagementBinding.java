// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserManagementBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button addUserButton;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button exportUsersButton;

  @NonNull
  public final Button importUsersButton;

  @NonNull
  public final Button passwordPolicyButton;

  @NonNull
  public final EditText searchInput;

  @NonNull
  public final TextView usersCountText;

  @NonNull
  public final ListView usersListView;

  private ActivityUserManagementBinding(@NonNull ScrollView rootView, @NonNull Button addUserButton,
      @NonNull Button backButton, @NonNull Button exportUsersButton,
      @NonNull Button importUsersButton, @NonNull Button passwordPolicyButton,
      @NonNull EditText searchInput, @NonNull TextView usersCountText,
      @NonNull ListView usersListView) {
    this.rootView = rootView;
    this.addUserButton = addUserButton;
    this.backButton = backButton;
    this.exportUsersButton = exportUsersButton;
    this.importUsersButton = importUsersButton;
    this.passwordPolicyButton = passwordPolicyButton;
    this.searchInput = searchInput;
    this.usersCountText = usersCountText;
    this.usersListView = usersListView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addUserButton;
      Button addUserButton = ViewBindings.findChildViewById(rootView, id);
      if (addUserButton == null) {
        break missingId;
      }

      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.exportUsersButton;
      Button exportUsersButton = ViewBindings.findChildViewById(rootView, id);
      if (exportUsersButton == null) {
        break missingId;
      }

      id = R.id.importUsersButton;
      Button importUsersButton = ViewBindings.findChildViewById(rootView, id);
      if (importUsersButton == null) {
        break missingId;
      }

      id = R.id.passwordPolicyButton;
      Button passwordPolicyButton = ViewBindings.findChildViewById(rootView, id);
      if (passwordPolicyButton == null) {
        break missingId;
      }

      id = R.id.searchInput;
      EditText searchInput = ViewBindings.findChildViewById(rootView, id);
      if (searchInput == null) {
        break missingId;
      }

      id = R.id.usersCountText;
      TextView usersCountText = ViewBindings.findChildViewById(rootView, id);
      if (usersCountText == null) {
        break missingId;
      }

      id = R.id.usersListView;
      ListView usersListView = ViewBindings.findChildViewById(rootView, id);
      if (usersListView == null) {
        break missingId;
      }

      return new ActivityUserManagementBinding((ScrollView) rootView, addUserButton, backButton,
          exportUsersButton, importUsersButton, passwordPolicyButton, searchInput, usersCountText,
          usersListView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
