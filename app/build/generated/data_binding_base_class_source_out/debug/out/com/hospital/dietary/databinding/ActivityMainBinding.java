// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button addBreakfastDrinkButton;

  @NonNull
  public final Button addBreakfastJuiceButton;

  @NonNull
  public final Button addDinnerDrinkButton;

  @NonNull
  public final Button addLunchDrinkButton;

  @NonNull
  public final Button backButton;

  @NonNull
  public final CheckBox biteSizeCB;

  @NonNull
  public final CheckBox breadOKCB;

  @NonNull
  public final Spinner breakfastBread;

  @NonNull
  public final Spinner breakfastColdCereal;

  @NonNull
  public final LinearLayout breakfastDrinksContainer;

  @NonNull
  public final TextView breakfastFluidDisplay;

  @NonNull
  public final Spinner breakfastFruit;

  @NonNull
  public final Spinner breakfastHotCereal;

  @NonNull
  public final LinearLayout breakfastJuicesContainer;

  @NonNull
  public final Spinner breakfastMain;

  @NonNull
  public final Spinner breakfastMuffin;

  @NonNull
  public final Button clearFormButton;

  @NonNull
  public final Spinner dietSpinner;

  @NonNull
  public final Spinner dinnerDessert;

  @NonNull
  public final LinearLayout dinnerDrinksContainer;

  @NonNull
  public final TextView dinnerFluidDisplay;

  @NonNull
  public final Spinner dinnerProtein;

  @NonNull
  public final Spinner dinnerStarch;

  @NonNull
  public final Spinner dinnerVegetable;

  @NonNull
  public final Spinner fluidRestrictionSpinner;

  @NonNull
  public final Spinner lunchDessert;

  @NonNull
  public final LinearLayout lunchDrinksContainer;

  @NonNull
  public final TextView lunchFluidDisplay;

  @NonNull
  public final Spinner lunchProtein;

  @NonNull
  public final Spinner lunchStarch;

  @NonNull
  public final Spinner lunchVegetable;

  @NonNull
  public final CheckBox mechanicalChoppedCB;

  @NonNull
  public final CheckBox mechanicalGroundCB;

  @NonNull
  public final EditText patientFirstNameInput;

  @NonNull
  public final EditText patientLastNameInput;

  @NonNull
  public final Spinner roomSpinner;

  @NonNull
  public final Button submitOrderButton;

  @NonNull
  public final Spinner wingSpinner;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Button addBreakfastDrinkButton,
      @NonNull Button addBreakfastJuiceButton, @NonNull Button addDinnerDrinkButton,
      @NonNull Button addLunchDrinkButton, @NonNull Button backButton, @NonNull CheckBox biteSizeCB,
      @NonNull CheckBox breadOKCB, @NonNull Spinner breakfastBread,
      @NonNull Spinner breakfastColdCereal, @NonNull LinearLayout breakfastDrinksContainer,
      @NonNull TextView breakfastFluidDisplay, @NonNull Spinner breakfastFruit,
      @NonNull Spinner breakfastHotCereal, @NonNull LinearLayout breakfastJuicesContainer,
      @NonNull Spinner breakfastMain, @NonNull Spinner breakfastMuffin,
      @NonNull Button clearFormButton, @NonNull Spinner dietSpinner, @NonNull Spinner dinnerDessert,
      @NonNull LinearLayout dinnerDrinksContainer, @NonNull TextView dinnerFluidDisplay,
      @NonNull Spinner dinnerProtein, @NonNull Spinner dinnerStarch,
      @NonNull Spinner dinnerVegetable, @NonNull Spinner fluidRestrictionSpinner,
      @NonNull Spinner lunchDessert, @NonNull LinearLayout lunchDrinksContainer,
      @NonNull TextView lunchFluidDisplay, @NonNull Spinner lunchProtein,
      @NonNull Spinner lunchStarch, @NonNull Spinner lunchVegetable,
      @NonNull CheckBox mechanicalChoppedCB, @NonNull CheckBox mechanicalGroundCB,
      @NonNull EditText patientFirstNameInput, @NonNull EditText patientLastNameInput,
      @NonNull Spinner roomSpinner, @NonNull Button submitOrderButton,
      @NonNull Spinner wingSpinner) {
    this.rootView = rootView;
    this.addBreakfastDrinkButton = addBreakfastDrinkButton;
    this.addBreakfastJuiceButton = addBreakfastJuiceButton;
    this.addDinnerDrinkButton = addDinnerDrinkButton;
    this.addLunchDrinkButton = addLunchDrinkButton;
    this.backButton = backButton;
    this.biteSizeCB = biteSizeCB;
    this.breadOKCB = breadOKCB;
    this.breakfastBread = breakfastBread;
    this.breakfastColdCereal = breakfastColdCereal;
    this.breakfastDrinksContainer = breakfastDrinksContainer;
    this.breakfastFluidDisplay = breakfastFluidDisplay;
    this.breakfastFruit = breakfastFruit;
    this.breakfastHotCereal = breakfastHotCereal;
    this.breakfastJuicesContainer = breakfastJuicesContainer;
    this.breakfastMain = breakfastMain;
    this.breakfastMuffin = breakfastMuffin;
    this.clearFormButton = clearFormButton;
    this.dietSpinner = dietSpinner;
    this.dinnerDessert = dinnerDessert;
    this.dinnerDrinksContainer = dinnerDrinksContainer;
    this.dinnerFluidDisplay = dinnerFluidDisplay;
    this.dinnerProtein = dinnerProtein;
    this.dinnerStarch = dinnerStarch;
    this.dinnerVegetable = dinnerVegetable;
    this.fluidRestrictionSpinner = fluidRestrictionSpinner;
    this.lunchDessert = lunchDessert;
    this.lunchDrinksContainer = lunchDrinksContainer;
    this.lunchFluidDisplay = lunchFluidDisplay;
    this.lunchProtein = lunchProtein;
    this.lunchStarch = lunchStarch;
    this.lunchVegetable = lunchVegetable;
    this.mechanicalChoppedCB = mechanicalChoppedCB;
    this.mechanicalGroundCB = mechanicalGroundCB;
    this.patientFirstNameInput = patientFirstNameInput;
    this.patientLastNameInput = patientLastNameInput;
    this.roomSpinner = roomSpinner;
    this.submitOrderButton = submitOrderButton;
    this.wingSpinner = wingSpinner;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addBreakfastDrinkButton;
      Button addBreakfastDrinkButton = ViewBindings.findChildViewById(rootView, id);
      if (addBreakfastDrinkButton == null) {
        break missingId;
      }

      id = R.id.addBreakfastJuiceButton;
      Button addBreakfastJuiceButton = ViewBindings.findChildViewById(rootView, id);
      if (addBreakfastJuiceButton == null) {
        break missingId;
      }

      id = R.id.addDinnerDrinkButton;
      Button addDinnerDrinkButton = ViewBindings.findChildViewById(rootView, id);
      if (addDinnerDrinkButton == null) {
        break missingId;
      }

      id = R.id.addLunchDrinkButton;
      Button addLunchDrinkButton = ViewBindings.findChildViewById(rootView, id);
      if (addLunchDrinkButton == null) {
        break missingId;
      }

      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.biteSizeCB;
      CheckBox biteSizeCB = ViewBindings.findChildViewById(rootView, id);
      if (biteSizeCB == null) {
        break missingId;
      }

      id = R.id.breadOKCB;
      CheckBox breadOKCB = ViewBindings.findChildViewById(rootView, id);
      if (breadOKCB == null) {
        break missingId;
      }

      id = R.id.breakfastBread;
      Spinner breakfastBread = ViewBindings.findChildViewById(rootView, id);
      if (breakfastBread == null) {
        break missingId;
      }

      id = R.id.breakfastColdCereal;
      Spinner breakfastColdCereal = ViewBindings.findChildViewById(rootView, id);
      if (breakfastColdCereal == null) {
        break missingId;
      }

      id = R.id.breakfastDrinksContainer;
      LinearLayout breakfastDrinksContainer = ViewBindings.findChildViewById(rootView, id);
      if (breakfastDrinksContainer == null) {
        break missingId;
      }

      id = R.id.breakfastFluidDisplay;
      TextView breakfastFluidDisplay = ViewBindings.findChildViewById(rootView, id);
      if (breakfastFluidDisplay == null) {
        break missingId;
      }

      id = R.id.breakfastFruit;
      Spinner breakfastFruit = ViewBindings.findChildViewById(rootView, id);
      if (breakfastFruit == null) {
        break missingId;
      }

      id = R.id.breakfastHotCereal;
      Spinner breakfastHotCereal = ViewBindings.findChildViewById(rootView, id);
      if (breakfastHotCereal == null) {
        break missingId;
      }

      id = R.id.breakfastJuicesContainer;
      LinearLayout breakfastJuicesContainer = ViewBindings.findChildViewById(rootView, id);
      if (breakfastJuicesContainer == null) {
        break missingId;
      }

      id = R.id.breakfastMain;
      Spinner breakfastMain = ViewBindings.findChildViewById(rootView, id);
      if (breakfastMain == null) {
        break missingId;
      }

      id = R.id.breakfastMuffin;
      Spinner breakfastMuffin = ViewBindings.findChildViewById(rootView, id);
      if (breakfastMuffin == null) {
        break missingId;
      }

      id = R.id.clearFormButton;
      Button clearFormButton = ViewBindings.findChildViewById(rootView, id);
      if (clearFormButton == null) {
        break missingId;
      }

      id = R.id.dietSpinner;
      Spinner dietSpinner = ViewBindings.findChildViewById(rootView, id);
      if (dietSpinner == null) {
        break missingId;
      }

      id = R.id.dinnerDessert;
      Spinner dinnerDessert = ViewBindings.findChildViewById(rootView, id);
      if (dinnerDessert == null) {
        break missingId;
      }

      id = R.id.dinnerDrinksContainer;
      LinearLayout dinnerDrinksContainer = ViewBindings.findChildViewById(rootView, id);
      if (dinnerDrinksContainer == null) {
        break missingId;
      }

      id = R.id.dinnerFluidDisplay;
      TextView dinnerFluidDisplay = ViewBindings.findChildViewById(rootView, id);
      if (dinnerFluidDisplay == null) {
        break missingId;
      }

      id = R.id.dinnerProtein;
      Spinner dinnerProtein = ViewBindings.findChildViewById(rootView, id);
      if (dinnerProtein == null) {
        break missingId;
      }

      id = R.id.dinnerStarch;
      Spinner dinnerStarch = ViewBindings.findChildViewById(rootView, id);
      if (dinnerStarch == null) {
        break missingId;
      }

      id = R.id.dinnerVegetable;
      Spinner dinnerVegetable = ViewBindings.findChildViewById(rootView, id);
      if (dinnerVegetable == null) {
        break missingId;
      }

      id = R.id.fluidRestrictionSpinner;
      Spinner fluidRestrictionSpinner = ViewBindings.findChildViewById(rootView, id);
      if (fluidRestrictionSpinner == null) {
        break missingId;
      }

      id = R.id.lunchDessert;
      Spinner lunchDessert = ViewBindings.findChildViewById(rootView, id);
      if (lunchDessert == null) {
        break missingId;
      }

      id = R.id.lunchDrinksContainer;
      LinearLayout lunchDrinksContainer = ViewBindings.findChildViewById(rootView, id);
      if (lunchDrinksContainer == null) {
        break missingId;
      }

      id = R.id.lunchFluidDisplay;
      TextView lunchFluidDisplay = ViewBindings.findChildViewById(rootView, id);
      if (lunchFluidDisplay == null) {
        break missingId;
      }

      id = R.id.lunchProtein;
      Spinner lunchProtein = ViewBindings.findChildViewById(rootView, id);
      if (lunchProtein == null) {
        break missingId;
      }

      id = R.id.lunchStarch;
      Spinner lunchStarch = ViewBindings.findChildViewById(rootView, id);
      if (lunchStarch == null) {
        break missingId;
      }

      id = R.id.lunchVegetable;
      Spinner lunchVegetable = ViewBindings.findChildViewById(rootView, id);
      if (lunchVegetable == null) {
        break missingId;
      }

      id = R.id.mechanicalChoppedCB;
      CheckBox mechanicalChoppedCB = ViewBindings.findChildViewById(rootView, id);
      if (mechanicalChoppedCB == null) {
        break missingId;
      }

      id = R.id.mechanicalGroundCB;
      CheckBox mechanicalGroundCB = ViewBindings.findChildViewById(rootView, id);
      if (mechanicalGroundCB == null) {
        break missingId;
      }

      id = R.id.patientFirstNameInput;
      EditText patientFirstNameInput = ViewBindings.findChildViewById(rootView, id);
      if (patientFirstNameInput == null) {
        break missingId;
      }

      id = R.id.patientLastNameInput;
      EditText patientLastNameInput = ViewBindings.findChildViewById(rootView, id);
      if (patientLastNameInput == null) {
        break missingId;
      }

      id = R.id.roomSpinner;
      Spinner roomSpinner = ViewBindings.findChildViewById(rootView, id);
      if (roomSpinner == null) {
        break missingId;
      }

      id = R.id.submitOrderButton;
      Button submitOrderButton = ViewBindings.findChildViewById(rootView, id);
      if (submitOrderButton == null) {
        break missingId;
      }

      id = R.id.wingSpinner;
      Spinner wingSpinner = ViewBindings.findChildViewById(rootView, id);
      if (wingSpinner == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, addBreakfastDrinkButton,
          addBreakfastJuiceButton, addDinnerDrinkButton, addLunchDrinkButton, backButton,
          biteSizeCB, breadOKCB, breakfastBread, breakfastColdCereal, breakfastDrinksContainer,
          breakfastFluidDisplay, breakfastFruit, breakfastHotCereal, breakfastJuicesContainer,
          breakfastMain, breakfastMuffin, clearFormButton, dietSpinner, dinnerDessert,
          dinnerDrinksContainer, dinnerFluidDisplay, dinnerProtein, dinnerStarch, dinnerVegetable,
          fluidRestrictionSpinner, lunchDessert, lunchDrinksContainer, lunchFluidDisplay,
          lunchProtein, lunchStarch, lunchVegetable, mechanicalChoppedCB, mechanicalGroundCB,
          patientFirstNameInput, patientLastNameInput, roomSpinner, submitOrderButton, wingSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
