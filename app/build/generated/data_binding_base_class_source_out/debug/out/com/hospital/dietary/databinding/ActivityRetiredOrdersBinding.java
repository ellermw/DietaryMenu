// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRetiredOrdersBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button datePickerButton;

  @NonNull
  public final Button homeButton;

  @NonNull
  public final TextView noRetiredOrdersText;

  @NonNull
  public final Button printAllButton;

  @NonNull
  public final Button printSelectedButton;

  @NonNull
  public final ListView retiredOrdersListView;

  @NonNull
  public final TextView retiredOrdersTitle;

  @NonNull
  public final Button selectDateButton;

  @NonNull
  public final TextView selectedDateText;

  private ActivityRetiredOrdersBinding(@NonNull LinearLayout rootView, @NonNull Button backButton,
      @NonNull Button datePickerButton, @NonNull Button homeButton,
      @NonNull TextView noRetiredOrdersText, @NonNull Button printAllButton,
      @NonNull Button printSelectedButton, @NonNull ListView retiredOrdersListView,
      @NonNull TextView retiredOrdersTitle, @NonNull Button selectDateButton,
      @NonNull TextView selectedDateText) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.datePickerButton = datePickerButton;
    this.homeButton = homeButton;
    this.noRetiredOrdersText = noRetiredOrdersText;
    this.printAllButton = printAllButton;
    this.printSelectedButton = printSelectedButton;
    this.retiredOrdersListView = retiredOrdersListView;
    this.retiredOrdersTitle = retiredOrdersTitle;
    this.selectDateButton = selectDateButton;
    this.selectedDateText = selectedDateText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRetiredOrdersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRetiredOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_retired_orders, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRetiredOrdersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.datePickerButton;
      Button datePickerButton = ViewBindings.findChildViewById(rootView, id);
      if (datePickerButton == null) {
        break missingId;
      }

      id = R.id.homeButton;
      Button homeButton = ViewBindings.findChildViewById(rootView, id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.noRetiredOrdersText;
      TextView noRetiredOrdersText = ViewBindings.findChildViewById(rootView, id);
      if (noRetiredOrdersText == null) {
        break missingId;
      }

      id = R.id.printAllButton;
      Button printAllButton = ViewBindings.findChildViewById(rootView, id);
      if (printAllButton == null) {
        break missingId;
      }

      id = R.id.printSelectedButton;
      Button printSelectedButton = ViewBindings.findChildViewById(rootView, id);
      if (printSelectedButton == null) {
        break missingId;
      }

      id = R.id.retiredOrdersListView;
      ListView retiredOrdersListView = ViewBindings.findChildViewById(rootView, id);
      if (retiredOrdersListView == null) {
        break missingId;
      }

      id = R.id.retiredOrdersTitle;
      TextView retiredOrdersTitle = ViewBindings.findChildViewById(rootView, id);
      if (retiredOrdersTitle == null) {
        break missingId;
      }

      id = R.id.selectDateButton;
      Button selectDateButton = ViewBindings.findChildViewById(rootView, id);
      if (selectDateButton == null) {
        break missingId;
      }

      id = R.id.selectedDateText;
      TextView selectedDateText = ViewBindings.findChildViewById(rootView, id);
      if (selectedDateText == null) {
        break missingId;
      }

      return new ActivityRetiredOrdersBinding((LinearLayout) rootView, backButton, datePickerButton,
          homeButton, noRetiredOrdersText, printAllButton, printSelectedButton,
          retiredOrdersListView, retiredOrdersTitle, selectDateButton, selectedDateText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
