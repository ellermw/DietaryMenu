// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDocumentsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button galleyStockButton;

  @NonNull
  public final Button miscButton;

  @NonNull
  public final Button productionSheetsButton;

  @NonNull
  public final TextView welcomeText;

  private ActivityDocumentsBinding(@NonNull LinearLayout rootView, @NonNull Button backButton,
      @NonNull Button galleyStockButton, @NonNull Button miscButton,
      @NonNull Button productionSheetsButton, @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.galleyStockButton = galleyStockButton;
    this.miscButton = miscButton;
    this.productionSheetsButton = productionSheetsButton;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDocumentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDocumentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_documents, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDocumentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.galleyStockButton;
      Button galleyStockButton = ViewBindings.findChildViewById(rootView, id);
      if (galleyStockButton == null) {
        break missingId;
      }

      id = R.id.miscButton;
      Button miscButton = ViewBindings.findChildViewById(rootView, id);
      if (miscButton == null) {
        break missingId;
      }

      id = R.id.productionSheetsButton;
      Button productionSheetsButton = ViewBindings.findChildViewById(rootView, id);
      if (productionSheetsButton == null) {
        break missingId;
      }

      id = R.id.welcomeText;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new ActivityDocumentsBinding((LinearLayout) rootView, backButton, galleyStockButton,
          miscButton, productionSheetsButton, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
