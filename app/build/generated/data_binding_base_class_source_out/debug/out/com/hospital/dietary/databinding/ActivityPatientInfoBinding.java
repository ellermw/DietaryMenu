// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientInfoBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button existingPatientsButton;

  @NonNull
  public final Button newPatientButton;

  @NonNull
  public final TextView pendingMealsCount;

  @NonNull
  public final TextView totalPatientsCount;

  private ActivityPatientInfoBinding(@NonNull ScrollView rootView, @NonNull Button backButton,
      @NonNull Button existingPatientsButton, @NonNull Button newPatientButton,
      @NonNull TextView pendingMealsCount, @NonNull TextView totalPatientsCount) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.existingPatientsButton = existingPatientsButton;
    this.newPatientButton = newPatientButton;
    this.pendingMealsCount = pendingMealsCount;
    this.totalPatientsCount = totalPatientsCount;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.existingPatientsButton;
      Button existingPatientsButton = ViewBindings.findChildViewById(rootView, id);
      if (existingPatientsButton == null) {
        break missingId;
      }

      id = R.id.newPatientButton;
      Button newPatientButton = ViewBindings.findChildViewById(rootView, id);
      if (newPatientButton == null) {
        break missingId;
      }

      id = R.id.pendingMealsCount;
      TextView pendingMealsCount = ViewBindings.findChildViewById(rootView, id);
      if (pendingMealsCount == null) {
        break missingId;
      }

      id = R.id.totalPatientsCount;
      TextView totalPatientsCount = ViewBindings.findChildViewById(rootView, id);
      if (totalPatientsCount == null) {
        break missingId;
      }

      return new ActivityPatientInfoBinding((ScrollView) rootView, backButton,
          existingPatientsButton, newPatientButton, pendingMealsCount, totalPatientsCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
