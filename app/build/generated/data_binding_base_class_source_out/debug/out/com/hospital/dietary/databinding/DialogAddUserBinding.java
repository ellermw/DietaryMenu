// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddUserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox activeCheckBox;

  @NonNull
  public final EditText fullNameEditText;

  @NonNull
  public final EditText passwordEditText;

  @NonNull
  public final Spinner roleSpinner;

  @NonNull
  public final EditText usernameEditText;

  private DialogAddUserBinding(@NonNull LinearLayout rootView, @NonNull CheckBox activeCheckBox,
      @NonNull EditText fullNameEditText, @NonNull EditText passwordEditText,
      @NonNull Spinner roleSpinner, @NonNull EditText usernameEditText) {
    this.rootView = rootView;
    this.activeCheckBox = activeCheckBox;
    this.fullNameEditText = fullNameEditText;
    this.passwordEditText = passwordEditText;
    this.roleSpinner = roleSpinner;
    this.usernameEditText = usernameEditText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activeCheckBox;
      CheckBox activeCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (activeCheckBox == null) {
        break missingId;
      }

      id = R.id.fullNameEditText;
      EditText fullNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (fullNameEditText == null) {
        break missingId;
      }

      id = R.id.passwordEditText;
      EditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.roleSpinner;
      Spinner roleSpinner = ViewBindings.findChildViewById(rootView, id);
      if (roleSpinner == null) {
        break missingId;
      }

      id = R.id.usernameEditText;
      EditText usernameEditText = ViewBindings.findChildViewById(rootView, id);
      if (usernameEditText == null) {
        break missingId;
      }

      return new DialogAddUserBinding((LinearLayout) rootView, activeCheckBox, fullNameEditText,
          passwordEditText, roleSpinner, usernameEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
