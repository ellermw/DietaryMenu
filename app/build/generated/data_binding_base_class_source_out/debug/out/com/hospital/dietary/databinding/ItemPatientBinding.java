// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPatientBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView patientDietText;

  @NonNull
  public final TextView patientLocationText;

  @NonNull
  public final TextView patientMealStatusText;

  @NonNull
  public final TextView patientNameText;

  @NonNull
  public final CheckBox selectionCheckBox;

  private ItemPatientBinding(@NonNull LinearLayout rootView, @NonNull TextView patientDietText,
      @NonNull TextView patientLocationText, @NonNull TextView patientMealStatusText,
      @NonNull TextView patientNameText, @NonNull CheckBox selectionCheckBox) {
    this.rootView = rootView;
    this.patientDietText = patientDietText;
    this.patientLocationText = patientLocationText;
    this.patientMealStatusText = patientMealStatusText;
    this.patientNameText = patientNameText;
    this.selectionCheckBox = selectionCheckBox;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPatientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPatientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_patient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPatientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.patientDietText;
      TextView patientDietText = ViewBindings.findChildViewById(rootView, id);
      if (patientDietText == null) {
        break missingId;
      }

      id = R.id.patientLocationText;
      TextView patientLocationText = ViewBindings.findChildViewById(rootView, id);
      if (patientLocationText == null) {
        break missingId;
      }

      id = R.id.patientMealStatusText;
      TextView patientMealStatusText = ViewBindings.findChildViewById(rootView, id);
      if (patientMealStatusText == null) {
        break missingId;
      }

      id = R.id.patientNameText;
      TextView patientNameText = ViewBindings.findChildViewById(rootView, id);
      if (patientNameText == null) {
        break missingId;
      }

      id = R.id.selectionCheckBox;
      CheckBox selectionCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (selectionCheckBox == null) {
        break missingId;
      }

      return new ItemPatientBinding((LinearLayout) rootView, patientDietText, patientLocationText,
          patientMealStatusText, patientNameText, selectionCheckBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
