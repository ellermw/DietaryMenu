// Generated by view binder compiler. Do not edit!
package com.hospital.dietary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hospital.dietary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccountManagementBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout adminSection;

  @NonNull
  public final Button changePasswordButton;

  @NonNull
  public final TextView lastLoginText;

  @NonNull
  public final Button manageUsersButton;

  @NonNull
  public final TextView roleText;

  @NonNull
  public final TextView usernameText;

  @NonNull
  public final TextView welcomeText;

  private ActivityAccountManagementBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout adminSection, @NonNull Button changePasswordButton,
      @NonNull TextView lastLoginText, @NonNull Button manageUsersButton,
      @NonNull TextView roleText, @NonNull TextView usernameText, @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.adminSection = adminSection;
    this.changePasswordButton = changePasswordButton;
    this.lastLoginText = lastLoginText;
    this.manageUsersButton = manageUsersButton;
    this.roleText = roleText;
    this.usernameText = usernameText;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccountManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccountManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_account_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccountManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminSection;
      LinearLayout adminSection = ViewBindings.findChildViewById(rootView, id);
      if (adminSection == null) {
        break missingId;
      }

      id = R.id.changePasswordButton;
      Button changePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.lastLoginText;
      TextView lastLoginText = ViewBindings.findChildViewById(rootView, id);
      if (lastLoginText == null) {
        break missingId;
      }

      id = R.id.manageUsersButton;
      Button manageUsersButton = ViewBindings.findChildViewById(rootView, id);
      if (manageUsersButton == null) {
        break missingId;
      }

      id = R.id.roleText;
      TextView roleText = ViewBindings.findChildViewById(rootView, id);
      if (roleText == null) {
        break missingId;
      }

      id = R.id.usernameText;
      TextView usernameText = ViewBindings.findChildViewById(rootView, id);
      if (usernameText == null) {
        break missingId;
      }

      id = R.id.welcomeText;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new ActivityAccountManagementBinding((ScrollView) rootView, adminSection,
          changePasswordButton, lastLoginText, manageUsersButton, roleText, usernameText,
          welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
